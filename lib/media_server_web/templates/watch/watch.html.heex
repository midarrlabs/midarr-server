<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <%= csrf_meta_tag() %>
    <%= live_title_tag(assigns[:page_title]) %>

    <link rel="apple-touch-icon" sizes="57x57" href="/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192"  href="/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="/ms-icon-144x144.png">
    <meta name="theme-color" content="#18181b">

    <style>
      body {
        margin: unset;
      }
      video {
        height: 100vh;
        width: 100%;
        background-color: black;
      }
    </style>
    <script>
      window.userId = <%= assigns[:current_user].id %>;
      window.userEmail = "<%= assigns[:current_user].email %>";
      window.userName = "<%= assigns[:current_user].name %>";
    </script>
  </head>
  <body>
    <%= @inner_content %>

    <script>
      window['__onGCastApiAvailable'] = function(isAvailable) {

          if (isAvailable) {

            const context = cast.framework.CastContext.getInstance();

            context.setOptions({
              receiverApplicationId: 'B7C82081',
              autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED
            });

            // Check if there is an existing session before starting a new one
            const session = context.getCurrentSession();

            if (session) {
              console.log('Using existing session:', session);
              loadMedia(session);

            } else {

              context.addEventListener(cast.framework.CastContextEventType.SESSION_STATE_CHANGED, function(event) {
                if (event.sessionState === cast.framework.SessionState.SESSION_STARTED) {
                  console.log('New session started:', event.session);
                  loadMedia(event.session);

                } else if (event.sessionState === cast.framework.SessionState.SESSION_ENDED ||
                           event.sessionState === cast.framework.SessionState.SESSION_ERROR) {
                  console.log('Session ended:', event.session);
                }
              });

              context.requestSession().then(function(session) {
                console.log('New session requested:', session);
                loadMedia(session);
              }).catch(function(error) {
                console.log('Error requesting session:', error);
              });
            }

            function loadMedia(session) {
              const mediaInfo = new chrome.cast.media.MediaInfo('<%= System.get_env("APP_URL", "") <> assigns[:media_stream] %>', '<%= assigns[:mime_type] %>');
              const request = new chrome.cast.media.LoadRequest(mediaInfo);

              session.loadMedia(request).then(function() {
                console.log('Media loaded');
              }).catch(function(error) {
                console.log('Error loading media:', error);
              });
            }
          }
      }
    </script>
    <script src="https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1">
    </script>
    <script defer phx-track-static src={Routes.static_path(@conn, "/assets/app.js")}>
    </script>
  </body>
</html>
